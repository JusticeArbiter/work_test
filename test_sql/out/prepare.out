-- Regression tests for prepareable statements. We query the content
-- of the pg_prepared_statements view as prepared statements are
-- created and removed.
SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name | statement | parameter_types 
------+-----------+-----------------
(0 rows)

PREPARE q1 AS SELECT 1 AS a;
PREPARE
EXECUTE q1;
 a 
---
 1
(1 row)

SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name |          statement           | parameter_types 
------+------------------------------+-----------------
 q1   | PREPARE q1 AS SELECT 1 AS a; | {}
(1 row)

-- should fail
PREPARE q1 AS SELECT 2;
ERROR:  42P05: prepared statement "q1" already exists
-- should succeed
DEALLOCATE q1;
DEALLOCATE
PREPARE q1 AS SELECT 2;
PREPARE
EXECUTE q1;
 ?column? 
----------
        2
(1 row)

PREPARE q2 AS SELECT 2 AS b;
PREPARE
SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name |          statement           | parameter_types 
------+------------------------------+-----------------
 q1   | PREPARE q1 AS SELECT 2;      | {}
 q2   | PREPARE q2 AS SELECT 2 AS b; | {}
(2 rows)

-- sql92 syntax
DEALLOCATE PREPARE q1;
DEALLOCATE
SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name |          statement           | parameter_types 
------+------------------------------+-----------------
 q2   | PREPARE q2 AS SELECT 2 AS b; | {}
(1 row)

DEALLOCATE PREPARE q2;
DEALLOCATE
-- the view should return the empty set again
SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name | statement | parameter_types 
------+-----------+-----------------
(0 rows)

-- parameterized queries
PREPARE q2(text) AS
	SELECT datname, datistemplate, datallowconn
	FROM pg_database WHERE datname = $1;
PREPARE
EXECUTE q2('postgres');
 datname | datistemplate | datallowconn 
---------+---------------+--------------
(0 rows)

PREPARE q3(text, int, float, boolean, oid, smallint) AS
	SELECT * FROM tenk1 WHERE string4 = $1 AND (four = $2 OR
	ten = $3::bigint OR true = $4 OR oid = $5 OR odd = $6::int)
	ORDER BY unique1;
PREPARE
EXECUTE q3('AAAAxx', 5::smallint, 10.5::float, false, 500::oid, 4::bigint);
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | tenthous | odd | even | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+----------+-----+------+----------+----------+---------
(0 rows)

-- too few params
EXECUTE q3('bool');
ERROR:  42601: wrong number of parameters for prepared statement "q3"
DETAIL:  Expected 6 parameters but got 1.
-- too many params
EXECUTE q3('bytea', 5::smallint, 10.5::float, false, 500::oid, 4::bigint, true);
ERROR:  42601: wrong number of parameters for prepared statement "q3"
DETAIL:  Expected 6 parameters but got 7.
-- wrong param types
EXECUTE q3(5::smallint, 10.5::float, false, 500::oid, 4::bigint, 'bytea');
ERROR:  42804: parameter $3 of type boolean cannot be coerced to the expected type double precision
HINT:  You will need to rewrite or cast the expression.
-- invalid type
PREPARE q4(nonexistenttype) AS SELECT $1;
ERROR:  42704: type "nonexistenttype" does not exist
LINE 1: PREPARE q4(nonexistenttype) AS SELECT $1;
                   ^
-- create table as execute
PREPARE q5(int, text) AS
	SELECT * FROM tenk1 WHERE unique1 = $1 OR stringu1 = $2
	ORDER BY unique1;
PREPARE
CREATE TEMPORARY TABLE q5_prep_results AS EXECUTE q5(200, 'DTAAAA');
SELECT 0
SELECT * FROM q5_prep_results;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | tenthous | odd | even | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+----------+-----+------+----------+----------+---------
(0 rows)

-- unknown or unspecified parameter types: should succeed
PREPARE q6 AS
    SELECT * FROM tenk1 WHERE unique1 = $1 AND stringu1 = $2;
PREPARE
PREPARE q7(unknown) AS
    SELECT * FROM road WHERE thepath = $1;
PREPARE
SELECT name, statement, parameter_types FROM pg_prepared_statements
    ORDER BY name;
 name |                              statement                              |                    parameter_types                     
------+---------------------------------------------------------------------+--------------------------------------------------------
 q2   | PREPARE q2(text) AS                                                +| {text}
      |         SELECT datname, datistemplate, datallowconn                +| 
      |         FROM pg_database WHERE datname = $1;                        | 
 q3   | PREPARE q3(text, int, float, boolean, oid, smallint) AS            +| {text,integer,"double precision",boolean,oid,smallint}
      |         SELECT * FROM tenk1 WHERE string4 = $1 AND (four = $2 OR   +| 
      |         ten = $3::bigint OR true = $4 OR oid = $5 OR odd = $6::int)+| 
      |         ORDER BY unique1;                                           | 
 q5   | PREPARE q5(int, text) AS                                           +| {integer,text}
      |         SELECT * FROM tenk1 WHERE unique1 = $1 OR stringu1 = $2    +| 
      |         ORDER BY unique1;                                           | 
 q6   | PREPARE q6 AS                                                      +| {integer,name}
      |     SELECT * FROM tenk1 WHERE unique1 = $1 AND stringu1 = $2;       | 
 q7   | PREPARE q7(unknown) AS                                             +| {path}
      |     SELECT * FROM road WHERE thepath = $1;                          | 
(5 rows)

-- test DEALLOCATE ALL;
DEALLOCATE ALL;
DEALLOCATE ALL
SELECT name, statement, parameter_types FROM pg_prepared_statements
    ORDER BY name;
 name | statement | parameter_types 
------+-----------+-----------------
(0 rows)

